#
# define display information
#
name: Containment Minimum Hash (CMash)

tooltip: |
    Containment Minimum Hash search against EBI (European Bioinformatics Institute) metagenome data.

screenshots: []

icon: EMBL_EBI_Logo_white.jpg

#
# define a set of similar apps that might be useful to the user
#
suggestions:
    apps:
        related: []
        next: []


#
# Configure the display and description of parameters
#
parameters :
    ref:
        ui-name : |
            Assembly input
        short-hint : |
            Reference to an assembly object
        long-hint  : |
            Reference to an assembly object

    db:
        ui-name : |
            Reference database
        short-hint : |
            database to reference against
        long-hint  : |
            database to reference against

    n_max_results:
        ui-name: |
            Maximum number of results
        short-hint: |
            Maximum number of similar sequence results to return, limit 500
        long-hint: |
            Maximum number of similar sequence results to return, limit 500

description : |
    CMash is a fast and accurate way to estimate the similarity of two sets. This is a probabilisitic data analysis approach, and uses containment min hashing.
    <p> Publication Abstract: Min hash is a probabilistic method for estimating the similarity of two sets in terms of their Jaccard index, defined as the ration of the size of their intersection to their union. We demonstrate that this method performs best when the sets under consideration are of similar size and the performance degrades considerably when the sets are of very different size. We introduce a new and efficient approach, called the containment min hash approach, that is more suitable for estimating the Jaccard index of sets of very different size. We accomplish this by leveraging another probabilistic method (in particular, Bloom filters) for fast membership queries. We derive bounds on the probability of estimate errors for the containment min hash approach and show it significantly improves upon the classical min hash approach. We also show significant improvements in terms of time and space complexity. As an application, we use this method to detect the presence/absence of organisms in a metagenomic data set, showing that it can detect the presence of very small, low abundance microorganisms.</p>
